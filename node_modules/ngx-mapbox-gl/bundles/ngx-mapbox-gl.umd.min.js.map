{
  "version": 3,
  "file": "ngx-mapbox-gl.umd.min.js",
  "sources": [
    "ng://ngx-mapbox-gl/node_modules/tslib/tslib.es6.js",
    "ng://ngx-mapbox-gl/out/app/lib/map/map.service.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/control.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/attribution-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/fullscreen-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/geocoder-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/geolocate-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/navigation-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/control/scale-control.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/layer/layer.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/marker/marker.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/geojson/geojson-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/geojson/feature.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/draggable/draggable.directive.ts",
    "ng://ngx-mapbox-gl/out/app/lib/image/image.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/map/map.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/marker-cluster/marker-cluster.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/popup/popup.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/canvas-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/image-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/raster-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/vector-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/source/video-source.component.ts",
    "ng://ngx-mapbox-gl/out/app/lib/lib.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { EventEmitter, Inject, Injectable, InjectionToken, NgZone, Optional } from '@angular/core';\nimport bbox from '@turf/bbox';\nimport { polygon, BBox } from '@turf/helpers';\nimport * as MapboxGl from 'mapbox-gl';\nimport { AsyncSubject } from 'rxjs/AsyncSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { first } from 'rxjs/operators/first';\nimport { MapEvent, MapImageData, MapImageOptions } from './map.types';\nimport { Subscription } from 'rxjs/Subscription';\n\nexport const MAPBOX_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport abstract class MglResizeEventEmitter {\n  abstract resizeEvent: Observable<void>;\n}\n\nexport interface SetupMap {\n  accessToken?: string;\n  customMapboxApiUrl?: string;\n  mapOptions: any; // MapboxGl.MapboxOptions\n  mapEvents: MapEvent;\n}\n\nexport interface SetupLayer {\n  layerOptions: MapboxGl.Layer;\n  layerEvents: {\n    click: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseEnter: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseLeave: EventEmitter<MapboxGl.MapMouseEvent>;\n    mouseMove: EventEmitter<MapboxGl.MapMouseEvent>;\n  };\n}\n\nexport type AllSource = MapboxGl.VectorSource |\n  MapboxGl.RasterSource |\n  MapboxGl.GeoJSONSource |\n  MapboxGl.ImageSourceOptions |\n  MapboxGl.VideoSource |\n  MapboxGl.GeoJSONSourceRaw |\n  MapboxGl.CanvasSourceOptions;\n\nexport type MovingOptions = MapboxGl.FlyToOptions |\n  (MapboxGl.AnimationOptions & MapboxGl.CameraOptions) |\n  MapboxGl.CameraOptions;\n\n@Injectable()\nexport class MapService {\n  mapInstance: MapboxGl.Map;\n  mapCreated$: Observable<void>;\n  mapLoaded$: Observable<void>;\n  mapEvents: MapEvent;\n\n  private mapCreated = new AsyncSubject<void>();\n  private mapLoaded = new AsyncSubject<void>();\n  private layerIdsToRemove: string[] = [];\n  private sourceIdsToRemove: string[] = [];\n  private markersToRemove: MapboxGl.Marker[] = [];\n  private popupsToRemove: MapboxGl.Popup[] = [];\n  private imageIdsToRemove: string[] = [];\n  private subscription = new Subscription();\n\n  constructor(\n    private zone: NgZone,\n    @Optional() @Inject(MAPBOX_API_KEY) private readonly MAPBOX_API_KEY: string,\n    @Optional() private readonly MglResizeEventEmitter: MglResizeEventEmitter\n  ) {\n    this.mapCreated$ = this.mapCreated.asObservable();\n    this.mapLoaded$ = this.mapLoaded.asObservable();\n  }\n\n  setup(options: SetupMap) {\n    // Need onStable to wait for a potential @angular/route transition to end\n    this.zone.onStable.pipe(first()).subscribe(() => {\n      // Workaround rollup issue\n      this.assign(MapboxGl, 'accessToken', options.accessToken || this.MAPBOX_API_KEY);\n      if (options.customMapboxApiUrl) {\n        this.assign(MapboxGl, 'config.API_URL', options.customMapboxApiUrl);\n      }\n      this.createMap(options.mapOptions);\n      this.hookEvents(options.mapEvents);\n      this.mapEvents = options.mapEvents;\n      this.mapCreated.next(undefined);\n      this.mapCreated.complete();\n    });\n  }\n\n  destroyMap() {\n    this.subscription.unsubscribe();\n    this.mapInstance.remove();\n  }\n\n  updateMinZoom(minZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMinZoom(minZoom);\n    });\n  }\n\n  updateMaxZoom(maxZoom: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxZoom(maxZoom);\n    });\n  }\n\n  updateScrollZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.scrollZoom.enable() : this.mapInstance.scrollZoom.disable();\n    });\n  }\n\n  updateDragRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragRotate.enable() : this.mapInstance.dragRotate.disable();\n    });\n  }\n\n  updateTouchZoomRotate(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.touchZoomRotate.enable() : this.mapInstance.touchZoomRotate.disable();\n    });\n  }\n\n  updateDoubleClickZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.doubleClickZoom.enable() : this.mapInstance.doubleClickZoom.disable();\n    });\n  }\n\n  updateKeyboard(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.keyboard.enable() : this.mapInstance.keyboard.disable();\n    });\n  }\n\n  updateDragPan(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.dragPan.enable() : this.mapInstance.dragPan.disable();\n    });\n  }\n\n  updateBoxZoom(status: boolean) {\n    return this.zone.runOutsideAngular(() => {\n      status ? this.mapInstance.boxZoom.enable() : this.mapInstance.boxZoom.disable();\n    });\n  }\n\n  updateStyle(style: MapboxGl.Style) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setStyle(style);\n    });\n  }\n\n  updateMaxBounds(maxBounds: MapboxGl.LngLatBoundsLike) {\n    // TODO Probably not so simple, write demo/tests\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setMaxBounds(maxBounds);\n    });\n  }\n\n  changeCanvasCursor(cursor: string) {\n    const canvas = this.mapInstance.getCanvasContainer();\n    canvas.style.cursor = cursor;\n  }\n\n  queryRenderedFeatures(\n    pointOrBox?: MapboxGl.PointLike | MapboxGl.PointLike[],\n    parameters?: { layers?: string[], filter?: any[] }\n  ): GeoJSON.Feature<GeoJSON.GeometryObject>[] {\n    return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);\n  }\n\n  panTo(center: MapboxGl.LngLatLike, options?: MapboxGl.AnimationOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.panTo(center, options);\n    });\n  }\n\n  move(\n    movingMethod: 'jumpTo' | 'easeTo' | 'flyTo',\n    movingOptions?: MovingOptions,\n    zoom?: number,\n    center?: MapboxGl.LngLatLike,\n    bearing?: number,\n    pitch?: number\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      (<any>this.mapInstance[movingMethod])({\n        ...movingOptions,\n        zoom: zoom ? zoom : this.mapInstance.getZoom(),\n        center: center ? center : this.mapInstance.getCenter(),\n        bearing: bearing ? bearing : this.mapInstance.getBearing(),\n        pitch: pitch ? pitch : this.mapInstance.getPitch()\n      });\n    });\n  }\n\n  addLayer(layer: SetupLayer, before?: string) {\n    this.zone.runOutsideAngular(() => {\n      Object.keys(layer.layerOptions)\n        .forEach((key: string) => {\n          const tkey = <keyof MapboxGl.Layer>key;\n          if (layer.layerOptions[tkey] === undefined) {\n            delete layer.layerOptions[tkey];\n          }\n        });\n      this.mapInstance.addLayer(layer.layerOptions, before);\n      if (layer.layerEvents.click.observers.length) {\n        this.mapInstance.on('click', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.click.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseEnter.observers.length) {\n        this.mapInstance.on('mouseenter', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseEnter.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseLeave.observers.length) {\n        this.mapInstance.on('mouseleave', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseLeave.emit(evt);\n          });\n        });\n      }\n      if (layer.layerEvents.mouseMove.observers.length) {\n        this.mapInstance.on('mousemove', layer.layerOptions.id, (evt: MapboxGl.MapMouseEvent) => {\n          this.zone.run(() => {\n            layer.layerEvents.mouseMove.emit(evt);\n          });\n        });\n      }\n    });\n  }\n\n  removeLayer(layerId: string) {\n    this.layerIdsToRemove.push(layerId);\n  }\n\n  addMarker(marker: MapboxGl.Marker) {\n    return this.zone.runOutsideAngular(() => {\n      marker.addTo(this.mapInstance);\n    });\n  }\n\n  removeMarker(marker: MapboxGl.Marker) {\n    this.markersToRemove.push(marker);\n  }\n\n  addPopup(popup: MapboxGl.Popup) {\n    return this.zone.runOutsideAngular(() => {\n      popup.addTo(this.mapInstance);\n    });\n  }\n\n  removePopup(popup: MapboxGl.Popup) {\n    this.popupsToRemove.push(popup);\n  }\n\n  addControl(control: MapboxGl.Control | MapboxGl.IControl, position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left') {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addControl(<any>control, position);\n    });\n  }\n\n  removeControl(control: MapboxGl.Control | MapboxGl.IControl) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.removeControl(<any>control);\n    });\n  }\n\n  async loadAndAddImage(imageId: string, url: string, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      return new Promise((resolve, reject) => {\n        this.mapInstance.loadImage(url, (error: { status: number } | null, image: ImageData) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n          this.addImage(imageId, image, options);\n          resolve();\n        });\n      });\n    });\n  }\n\n  addImage(imageId: string, data: MapImageData, options?: MapImageOptions) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.addImage(imageId, <any>data, options);\n    });\n  }\n\n  removeImage(imageId: string) {\n    this.imageIdsToRemove.push(imageId);\n  }\n\n  addSource(sourceId: string, source: AllSource) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(source)\n        .forEach((key) =>\n          (<any>source)[key] === undefined && delete (<any>source)[key]);\n      this.mapInstance.addSource(sourceId, <any>source); // Typings issue\n    });\n  }\n\n  getSource<T>(sourceId: string) {\n    return <T><any>this.mapInstance.getSource(sourceId);\n  }\n\n  removeSource(sourceId: string) {\n    this.sourceIdsToRemove.push(sourceId);\n  }\n\n  setAllLayerPaintProperty(\n    layerId: string,\n    paint: MapboxGl.BackgroundPaint | MapboxGl.FillPaint | MapboxGl.FillExtrusionPaint | MapboxGl.LinePaint | MapboxGl.SymbolPaint | MapboxGl.RasterPaint | MapboxGl.CirclePaint\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(paint).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setPaintProperty(layerId, key, (<any>paint)[key]);\n      });\n    });\n  }\n\n  setAllLayerLayoutProperty(\n    layerId: string,\n    layout: MapboxGl.BackgroundLayout | MapboxGl.FillLayout | MapboxGl.FillExtrusionLayout | MapboxGl.LineLayout | MapboxGl.SymbolLayout | MapboxGl.RasterLayout | MapboxGl.CircleLayout\n  ) {\n    return this.zone.runOutsideAngular(() => {\n      Object.keys(layout).forEach((key) => {\n        // TODO Check for perf, setPaintProperty only on changed paint props maybe\n        this.mapInstance.setLayoutProperty(layerId, key, (<any>layout)[key]);\n      });\n    });\n  }\n\n  setLayerFilter(layerId: string, filter: any[]) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setFilter(layerId, filter);\n    });\n  }\n\n  setLayerBefore(layerId: string, beforeId: string) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.moveLayer(layerId, beforeId);\n    });\n  }\n\n  setLayerZoomRange(layerId: string, minZoom?: number, maxZoom?: number) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);\n    });\n  }\n\n  fitBounds(bounds: MapboxGl.LngLatBoundsLike, options?: any) {\n    return this.zone.runOutsideAngular(() => {\n      this.mapInstance.fitBounds(bounds, options);\n    });\n  }\n\n  getCurrentViewportBbox(): BBox {\n    const canvas = this.mapInstance.getCanvas();\n    const w = canvas.width;\n    const h = canvas.height;\n    const upLeft = this.mapInstance.unproject([0, 0]).toArray();\n    const upRight = this.mapInstance.unproject([w, 0]).toArray();\n    const downRight = this.mapInstance.unproject([w, h]).toArray();\n    const downLeft = this.mapInstance.unproject([0, h]).toArray();\n    return bbox(polygon([[upLeft, upRight, downRight, downLeft, upLeft]]));\n  }\n\n  applyChanges() {\n    this.zone.runOutsideAngular(() => {\n      this.removeLayers();\n      this.removeSources();\n      this.removeMarkers();\n      this.removePopups();\n      this.removeImages();\n    });\n  }\n\n  private createMap(options: MapboxGl.MapboxOptions) {\n    NgZone.assertNotInAngularZone();\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof MapboxGl.MapboxOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.mapInstance = new MapboxGl.Map(options);\n    const subChanges = this.zone.onMicrotaskEmpty\n      .subscribe(() => this.applyChanges());\n    if (this.MglResizeEventEmitter) {\n      const subResize = this.MglResizeEventEmitter.resizeEvent.subscribe(() => {\n        this.mapInstance.resize();\n      });\n      this.subscription.add(subResize);\n    }\n    this.subscription.add(subChanges);\n  }\n\n  private removeLayers() {\n    for (const layerId of this.layerIdsToRemove) {\n      this.mapInstance.off('click', layerId);\n      this.mapInstance.off('mouseenter', layerId);\n      this.mapInstance.off('mouseleave', layerId);\n      this.mapInstance.off('mousemove', layerId);\n      this.mapInstance.removeLayer(layerId);\n    }\n    this.layerIdsToRemove = [];\n  }\n\n  private removeSources() {\n    for (const sourceId of this.sourceIdsToRemove) {\n      this.mapInstance.removeSource(sourceId);\n    }\n    this.sourceIdsToRemove = [];\n  }\n\n  private removeMarkers() {\n    for (const marker of this.markersToRemove) {\n      marker.remove();\n    }\n    this.markersToRemove = [];\n  }\n\n  private removePopups() {\n    for (const popup of this.popupsToRemove) {\n      popup.remove();\n    }\n    this.popupsToRemove = [];\n  }\n\n  private removeImages() {\n    for (const imageId of this.imageIdsToRemove) {\n      this.mapInstance.removeImage(imageId);\n    }\n    this.imageIdsToRemove = [];\n  }\n\n  private hookEvents(events: MapEvent) {\n    this.mapInstance.on('load', () => {\n      this.mapLoaded.next(undefined);\n      this.mapLoaded.complete();\n      this.zone.run(() => events.load.emit(this.mapInstance));\n    });\n    if (events.resize.observers.length) {\n      this.mapInstance.on('resize', () => this.zone.run(() => events.resize.emit()));\n    }\n    if (events.remove.observers.length) {\n      this.mapInstance.on('remove', () => this.zone.run(() => events.remove.emit()));\n    }\n    if (events.mouseDown.observers.length) {\n      this.mapInstance.on('mousedown', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseDown.emit(evt)));\n    }\n    if (events.mouseUp.observers.length) {\n      this.mapInstance.on('mouseup', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseUp.emit(evt)));\n    }\n    if (events.mouseMove.observers.length) {\n      this.mapInstance.on('mousemove', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseMove.emit(evt)));\n    }\n    if (events.click.observers.length) {\n      this.mapInstance.on('click', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.click.emit(evt)));\n    }\n    if (events.dblClick.observers.length) {\n      this.mapInstance.on('dblclick', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.dblClick.emit(evt)));\n    }\n    if (events.mouseEnter.observers.length) {\n      this.mapInstance.on('mouseenter', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseEnter.emit(evt)));\n    }\n    if (events.mouseLeave.observers.length) {\n      this.mapInstance.on('mouseleave', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseLeave.emit(evt)));\n    }\n    if (events.mouseOver.observers.length) {\n      this.mapInstance.on('mouseover', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOver.emit(evt)));\n    }\n    if (events.mouseOut.observers.length) {\n      this.mapInstance.on('mouseout', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.mouseOut.emit(evt)));\n    }\n    if (events.contextMenu.observers.length) {\n      this.mapInstance.on('contextmenu', (evt: MapboxGl.MapMouseEvent) => this.zone.run(() => events.contextMenu.emit(evt)));\n    }\n    if (events.touchStart.observers.length) {\n      this.mapInstance.on('touchstart', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchStart.emit(evt)));\n    }\n    if (events.touchEnd.observers.length) {\n      this.mapInstance.on('touchend', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchEnd.emit(evt)));\n    }\n    if (events.touchMove.observers.length) {\n      this.mapInstance.on('touchmove', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchMove.emit(evt)));\n    }\n    if (events.touchCancel.observers.length) {\n      this.mapInstance.on('touchcancel', (evt: MapboxGl.MapTouchEvent) => this.zone.run(() => events.touchCancel.emit(evt)));\n    }\n    if (events.moveStart.observers.length) {\n      this.mapInstance.on('movestart', (evt: DragEvent) => this.zone.run(() => events.moveStart.emit(evt)));\n    }\n    if (events.move.observers.length) {\n      this.mapInstance.on('move', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.move.emit(evt)));\n    }\n    if (events.moveEnd.observers.length) {\n      this.mapInstance.on('moveend', (evt: DragEvent) => this.zone.run(() => events.moveEnd.emit(evt)));\n    }\n    if (events.dragStart.observers.length) {\n      this.mapInstance.on('dragstart', (evt: DragEvent) => this.zone.run(() => events.dragStart.emit(evt)));\n    }\n    if (events.drag.observers.length) {\n      this.mapInstance.on('drag', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.drag.emit(evt)));\n    }\n    if (events.dragEnd.observers.length) {\n      this.mapInstance.on('dragend', (evt: DragEvent) => this.zone.run(() => events.dragEnd.emit(evt)));\n    }\n    if (events.zoomStart.observers.length) {\n      this.mapInstance.on('zoomstart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomStart.emit(evt)));\n    }\n    if (events.zoomEvt.observers.length) {\n      this.mapInstance.on('zoom', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEvt.emit(evt)));\n    }\n    if (events.zoomEnd.observers.length) {\n      this.mapInstance.on('zoomend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.zoomEnd.emit(evt)));\n    }\n    if (events.rotateStart.observers.length) {\n      this.mapInstance.on('rotatestart', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotateStart.emit(evt)));\n    }\n    if (events.rotate.observers.length) {\n      this.mapInstance.on('rotate', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotate.emit(evt)));\n    }\n    if (events.rotateEnd.observers.length) {\n      this.mapInstance.on('rotateend', (evt: MapboxGl.MapTouchEvent | MapboxGl.MapMouseEvent) => this.zone.run(() => events.rotateEnd.emit(evt)));\n    }\n    if (events.pitchStart.observers.length) {\n      this.mapInstance.on('pitchstart', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchStart.emit(evt)));\n    }\n    if (events.pitchEvt.observers.length) {\n      this.mapInstance.on('pitch', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEvt.emit(evt)));\n    }\n    if (events.pitchEnd.observers.length) {\n      this.mapInstance.on('pitchend', (evt: MapboxGl.EventData) => this.zone.run(() => events.pitchEnd.emit(evt)));\n    }\n    if (events.boxZoomStart.observers.length) {\n      this.mapInstance.on('boxzoomstart', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomStart.emit(evt)));\n    }\n    if (events.boxZoomEnd.observers.length) {\n      this.mapInstance.on('boxzoomend', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomEnd.emit(evt)));\n    }\n    if (events.boxZoomCancel.observers.length) {\n      this.mapInstance.on('boxzoomcancel', (evt: MapboxGl.MapBoxZoomEvent) => this.zone.run(() => events.boxZoomCancel.emit(evt)));\n    }\n    if (events.webGlContextLost.observers.length) {\n      this.mapInstance.on('webglcontextlost', () => this.zone.run(() => events.webGlContextLost.emit()));\n    }\n    if (events.webGlContextRestored.observers.length) {\n      this.mapInstance.on('webglcontextrestored', () => this.zone.run(() => events.webGlContextRestored.emit()));\n    }\n    if (events.render.observers.length) {\n      this.mapInstance.on('render', () => this.zone.run(() => events.render.emit()));\n    }\n    if (events.error.observers.length) {\n      this.mapInstance.on('error', () => this.zone.run(() => events.error.emit()));\n    }\n    if (events.data.observers.length) {\n      this.mapInstance.on('data', (evt: MapboxGl.EventData) => this.zone.run(() => events.data.emit(evt)));\n    }\n    if (events.styleData.observers.length) {\n      this.mapInstance.on('styledata', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleData.emit(evt)));\n    }\n    if (events.sourceData.observers.length) {\n      this.mapInstance.on('sourcedata', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceData.emit(evt)));\n    }\n    if (events.dataLoading.observers.length) {\n      this.mapInstance.on('dataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.dataLoading.emit(evt)));\n    }\n    if (events.styleDataLoading.observers.length) {\n      this.mapInstance.on('styledataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.styleDataLoading.emit(evt)));\n    }\n    if (events.sourceDataLoading.observers.length) {\n      this.mapInstance.on('sourcedataloading', (evt: MapboxGl.EventData) => this.zone.run(() => events.sourceDataLoading.emit(evt)));\n    }\n  }\n\n  // TODO move this elsewhere\n  private assign(obj: any, prop: any, value: any) {\n    if (typeof prop === 'string') {\n      // tslint:disable-next-line:no-parameter-reassignment\n      prop = prop.split('.');\n    }\n    if (prop.length > 1) {\n      const e = prop.shift();\n      this.assign(obj[e] =\n        Object.prototype.toString.call(obj[e]) === '[object Object]'\n          ? obj[e]\n          : {},\n        prop,\n        value);\n    } else {\n      obj[prop[0]] = value;\n    }\n  }\n}\n",
    "import { Control, IControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\n\nexport class CustomControl implements IControl {\n  constructor(\n    private container: HTMLElement\n  ) {\n  }\n\n  onAdd() {\n    return this.container;\n  }\n\n  onRemove() {\n    return this.container.parentNode!.removeChild(this.container);\n  }\n\n  getDefaultPosition() {\n    return 'top-right';\n  }\n}\n\n@Component({\n  selector: 'mgl-control',\n  template: '<div class=\"mapboxgl-ctrl\" #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ControlComponent implements OnDestroy, AfterContentInit {\n  /* Init inputs */\n  @Input() position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\n  @ViewChild('content') content: ElementRef;\n\n  control: Control | IControl;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterContentInit() {\n    if (this.content.nativeElement.childNodes.length) {\n      this.control = new CustomControl(this.content.nativeElement);\n      this.MapService.mapCreated$.subscribe(() => {\n        this.MapService.addControl(this.control!, this.position);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeControl(this.control);\n  }\n}\n",
    "import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { AttributionControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglAttribution]'\n})\nexport class AttributionControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() compact?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { compact?: boolean } = {};\n      if (this.compact !== undefined) {\n        options.compact = this.compact;\n      }\n      this.ControlComponent.control = new AttributionControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n",
    "import { Directive, OnInit, Host } from '@angular/core';\nimport { FullscreenControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglFullscreen]'\n})\nexport class FullscreenControlDirective implements OnInit {\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new FullscreenControl();\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n",
    "import {\n  Directive,\n  EventEmitter,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges\n  } from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { GeocoderEvent } from '../map/map.types';\nimport { ControlComponent } from './control.component';\n\nconst MapboxGeocoder = require('@mapbox/mapbox-gl-geocoder');\n\nexport const MAPBOX_GEOCODER_API_KEY = new InjectionToken('MapboxApiKey');\n\nexport interface LngLatLiteral {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface Results extends GeoJSON.FeatureCollection<GeoJSON.Point> {\n  attribution: string;\n  query: string[];\n}\n\nexport interface Result extends GeoJSON.Feature<GeoJSON.Point> {\n  bbox: [number, number, number, number];\n  center: number[];\n  place_name: string;\n  place_type: string[];\n  relevance: number;\n  text: string;\n  address: string;\n  context: any[];\n}\n\n@Directive({\n  selector: '[mglGeocoder]'\n})\nexport class GeocoderControlDirective implements OnInit, OnChanges, GeocoderEvent {\n  /* Init inputs */\n  @Input() country?: string;\n  @Input() placeholder?: string;\n  @Input() zoom?: number;\n  @Input() bbox?: [number, number, number, number];\n  @Input() types?: string;\n  @Input() flyTo?: boolean;\n  @Input() minLength?: number;\n  @Input() limit?: number;\n  @Input() language?: string;\n  @Input() accessToken?: string;\n  @Input() filter?: (feature: Result) => boolean;\n  @Input() localGeocoder?: (query: string) => Result[];\n\n  /* Dynamic inputs */\n  @Input() proximity?: LngLatLiteral;\n\n  @Output() clear = new EventEmitter<void>();\n  @Output() loading = new EventEmitter<{ query: string }>();\n  @Output() results = new EventEmitter<Results>();\n  @Output() result = new EventEmitter<{ result: Result }>();\n  @Output() error = new EventEmitter<any>();\n\n  geocoder: any;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone,\n    @Host() private ControlComponent: ControlComponent,\n    @Optional() @Inject(MAPBOX_GEOCODER_API_KEY) private readonly MAPBOX_GEOCODER_API_KEY: string\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        proximity: this.proximity,\n        country: this.country,\n        placeholder: this.placeholder,\n        zoom: this.zoom,\n        bbox: this.bbox,\n        types: this.types,\n        flyTo: this.flyTo,\n        minLength: this.minLength,\n        limit: this.limit,\n        language: this.language,\n        filter: this.filter,\n        localGeocoder: this.localGeocoder,\n        accessToken: this.accessToken || this.MAPBOX_GEOCODER_API_KEY\n      };\n\n      Object.keys(options).forEach((key: string) => {\n        const tkey = <keyof typeof options>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n      this.geocoder = new MapboxGeocoder(options);\n      this.hookEvents(this);\n      this.addControl();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.proximity && !changes.proximity.isFirstChange()) {\n      this.geocoder.setProximity(changes.proximity.currentValue);\n    }\n  }\n\n  private addControl() {\n    this.ControlComponent.control = this.geocoder;\n    this.MapService.addControl(\n      this.ControlComponent.control,\n      this.ControlComponent.position\n    );\n  }\n\n  private hookEvents(events: GeocoderEvent) {\n    if (events.results.observers.length) {\n      this.geocoder.on('results', (evt: Results) => this.zone.run(() => events.results.emit(evt)));\n    }\n    if (events.result.observers.length) {\n      this.geocoder.on('result', (evt: { result: Result }) => this.zone.run(() => events.result.emit(evt)));\n    }\n    if (events.error.observers.length) {\n      this.geocoder.on('error', (evt: any) => this.zone.run(() => events.error.emit(evt)));\n    }\n    if (events.loading.observers.length) {\n      this.geocoder.on('loading', (evt: { query: string }) => this.zone.run(() => events.loading.emit(evt)));\n    }\n    if (events.clear.observers.length) {\n      this.geocoder.on('clear', () => this.zone.run(() => events.clear.emit()));\n    }\n\n  }\n}\n",
    "import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { GeolocateControl, FitBoundsOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglGeolocate]'\n})\nexport class GeolocateControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() positionOptions?: PositionOptions;\n  @Input() fitBoundsOptions?: FitBoundsOptions;\n  @Input() trackUserLocation?: boolean;\n  @Input() showUserLocation?: boolean;\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options = {\n        positionOptions: this.positionOptions,\n        fitBoundsOptions: this.fitBoundsOptions,\n        trackUserLocation: this.trackUserLocation,\n        showUserLocation: this.showUserLocation\n      };\n\n      Object.keys(options)\n        .forEach((key: string) => {\n          const tkey = <keyof typeof options>key;\n          if (options[tkey] === undefined) {\n            delete options[tkey];\n          }\n        });\n      this.ControlComponent.control = new GeolocateControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n",
    "import { Directive, OnInit, Host } from '@angular/core';\nimport { NavigationControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglNavigation]'\n})\nexport class NavigationControlDirective implements OnInit {\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      this.ControlComponent.control = new NavigationControl();\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n",
    "import { Directive, Host, Input, OnInit } from '@angular/core';\nimport { ScaleControl } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { ControlComponent } from './control.component';\n\n@Directive({\n  selector: '[mglScale]'\n})\nexport class ScaleControlDirective implements OnInit {\n  /* Init inputs */\n  @Input() maxWidth?: number;\n  @Input() unit?: 'imperial' | 'metric' | 'nautical';\n\n  constructor(\n    private MapService: MapService,\n    @Host() private ControlComponent: ControlComponent\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.ControlComponent.control) {\n        throw new Error('Another control is already set for this control');\n      }\n      const options: { maxWidth?: number, unit?: string } = {};\n      if (this.maxWidth !== undefined) {\n        options.maxWidth = this.maxWidth;\n      }\n      if (this.unit !== undefined) {\n        options.unit = this.unit;\n      }\n      this.ControlComponent.control = new ScaleControl(options);\n      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);\n    });\n  }\n}\n",
    "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BackgroundLayout,\n  BackgroundPaint,\n  CircleLayout,\n  CirclePaint,\n  FillExtrusionLayout,\n  FillExtrusionPaint,\n  FillLayout,\n  FillPaint,\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  ImageSource,\n  Layer,\n  LineLayout,\n  LinePaint,\n  MapMouseEvent,\n  RasterLayout,\n  RasterPaint,\n  RasterSource,\n  SymbolLayout,\n  SymbolPaint,\n  VectorSource,\n  VideoSource\n} from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-layer',\n  template: ''\n})\nexport class LayerComponent implements OnInit, OnDestroy, OnChanges, Layer {\n  /* Init inputs */\n  @Input() id: string;\n  @Input() source?: string | VectorSource | RasterSource | GeoJSONSource | ImageSource | VideoSource | GeoJSONSourceRaw;\n  @Input() type: 'symbol' | 'fill' | 'line' | 'circle' | 'fill-extrusion' | 'raster' | 'background';\n  @Input() metadata?: any;\n  @Input() sourceLayer?: string;\n\n  /* Dynamic inputs */\n  @Input() filter?: any[];\n  @Input() layout?: BackgroundLayout | FillLayout | FillExtrusionLayout | LineLayout | SymbolLayout | RasterLayout | CircleLayout;\n  @Input() paint?: BackgroundPaint | FillPaint | FillExtrusionPaint | LinePaint | SymbolPaint | RasterPaint | CirclePaint;\n  @Input() before?: string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n\n  private layerAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addLayer({\n        layerOptions: {\n          id: this.id,\n          type: this.type,\n          source: this.source,\n          metadata: this.metadata,\n          'source-layer': this.sourceLayer,\n          minzoom: this.minzoom,\n          maxzoom: this.maxzoom,\n          filter: this.filter,\n          layout: this.layout,\n          paint: this.paint\n        },\n        layerEvents: {\n          click: this.click,\n          mouseEnter: this.mouseEnter,\n          mouseLeave: this.mouseLeave,\n          mouseMove: this.mouseMove\n        }\n      }, this.before);\n      this.layerAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.layerAdded) {\n      return;\n    }\n    if (changes.paint && !changes.paint.isFirstChange()) {\n      this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue!);\n    }\n    if (changes.layout && !changes.layout.isFirstChange()) {\n      this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue!);\n    }\n    if (changes.filter && !changes.filter.isFirstChange()) {\n      this.MapService.setLayerFilter(this.id, changes.filter.currentValue!);\n    }\n    if (changes.before && !changes.before.isFirstChange()) {\n      this.MapService.setLayerBefore(this.id, changes.before.currentValue!);\n    }\n    if (\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.layerAdded) {\n      this.MapService.removeLayer(this.id);\n    }\n  }\n}\n",
    "import {\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewChild,\n    AfterViewInit,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { LngLatLike, Marker, PointLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-marker',\n  template: '<div #content><ng-content></ng-content></div>',\n  styles: [`\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MarkerComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() offset?: PointLike;\n\n  /* Dynamic input */\n  @Input() feature?: GeoJSON.Feature<GeoJSON.Point>;\n  @Input() lngLat?: LngLatLike;\n\n  @ViewChild('content') content: ElementRef;\n\n  markerInstance?: Marker;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.feature && this.lngLat) {\n      throw new Error('feature and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.lngLat!);\n    }\n    if (changes.feature && !changes.feature.isFirstChange()) {\n      this.markerInstance!.setLngLat(this.feature!.geometry!.coordinates);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.markerInstance = new Marker(this.content.nativeElement, { offset: this.offset });\n    this.markerInstance.setLngLat(this.feature ? this.feature.geometry!.coordinates : this.lngLat!);\n    this.MapService.mapCreated$.subscribe(() => {\n      this.MapService.addMarker(this.markerInstance!);\n    });\n  }\n\n  ngOnDestroy() {\n    this.MapService.removeMarker(this.markerInstance!);\n    this.markerInstance = undefined;\n  }\n\n  togglePopup() {\n    this.markerInstance!.togglePopup();\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    this.markerInstance!.setLngLat(coordinates);\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { GeoJSONSource, GeoJSONSourceOptions, GeoJSONGeometry } from 'mapbox-gl';\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MapService } from '../../map/map.service';\n\n@Component({\n  selector: 'mgl-geojson-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GeoJSONSourceComponent implements OnInit, OnDestroy, OnChanges, GeoJSONSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: GeoJSON.Feature<GeoJSONGeometry> | GeoJSON.FeatureCollection<GeoJSONGeometry> | string;\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() buffer?: number;\n  @Input() tolerance?: number;\n  @Input() cluster?: boolean;\n  @Input() clusterRadius?: number;\n  @Input() clusterMaxZoom?: number;\n\n  updateFeatureData = new Subject();\n\n  private sub: Subscription;\n  private sourceAdded = false;\n  private featureIdCounter = 0;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (!this.data) {\n      this.data = {\n        type: 'FeatureCollection',\n        features: []\n      };\n    }\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'geojson',\n        data: this.data,\n        maxzoom: this.maxzoom,\n        minzoom: this.minzoom,\n        buffer: this.buffer,\n        tolerance: this.tolerance,\n        cluster: this.cluster,\n        clusterRadius: this.clusterRadius,\n        clusterMaxZoom: this.clusterMaxZoom,\n      });\n      this.sub = this.updateFeatureData.pipe(\n        debounceTime(0)\n      ).subscribe(() => {\n        const source = this.MapService.getSource<GeoJSONSource>(this.id);\n        source.setData(this.data!);\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.buffer && !changes.buffer.isFirstChange() ||\n      changes.tolerance && !changes.tolerance.isFirstChange() ||\n      changes.cluster && !changes.cluster.isFirstChange() ||\n      changes.clusterRadius && !changes.clusterRadius.isFirstChange() ||\n      changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n    if (changes.data && !changes.data.isFirstChange()) {\n      const source = this.MapService.getSource<GeoJSONSource>(this.id);\n      source.setData(this.data!);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.sub.unsubscribe();\n      this.MapService.removeSource(this.id);\n    }\n  }\n\n  addFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    collection.features.push(feature);\n    this.updateFeatureData.next();\n  }\n\n  removeFeature(feature: GeoJSON.Feature<GeoJSON.GeometryObject>) {\n    const collection = <GeoJSON.FeatureCollection<GeoJSON.GeometryObject>>this.data;\n    const index = collection.features.indexOf(feature);\n    if (index > -1) {\n      collection.features.splice(index, 1);\n    }\n    this.updateFeatureData.next();\n  }\n\n  getNewFeatureId() {\n    return ++this.featureIdCounter;\n  }\n}\n",
    "import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { GeoJSONSourceComponent } from './geojson-source.component';\n\n@Component({\n  selector: 'mgl-feature',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeatureComponent implements OnInit, OnDestroy, GeoJSON.Feature<GeoJSON.GeometryObject> {\n  /* Init inputs */\n  @Input() id?: number; // FIXME number only for now https://github.com/mapbox/mapbox-gl-js/issues/2716\n  @Input() geometry: GeoJSON.GeometryObject;\n  @Input() properties: any;\n  type: 'Feature' = 'Feature';\n\n  private feature: GeoJSON.Feature<GeoJSON.GeometryObject>;\n\n  constructor(\n    @Inject(forwardRef(() => GeoJSONSourceComponent)) private GeoJSONSourceComponent: GeoJSONSourceComponent\n  ) { }\n\n  ngOnInit() {\n    if (!this.id) {\n      this.id = this.GeoJSONSourceComponent.getNewFeatureId();\n    }\n    this.feature = {\n      type: this.type,\n      geometry: this.geometry,\n      properties: this.properties ? this.properties : {}\n    };\n    this.feature.id = this.id;\n    this.GeoJSONSourceComponent.addFeature(this.feature);\n  }\n\n  ngOnDestroy() {\n    this.GeoJSONSourceComponent.removeFeature(this.feature);\n  }\n\n  updateCoordinates(coordinates: number[]) {\n    (<GeoJSON.Point>this.feature.geometry).coordinates = coordinates;\n    this.GeoJSONSourceComponent.updateFeatureData.next();\n  }\n}\n",
    "import {\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output\n} from '@angular/core';\nimport { MapMouseEvent } from 'mapbox-gl';\nimport { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { filter } from 'rxjs/operators/filter';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { take } from 'rxjs/operators/take';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { tap } from 'rxjs/operators/tap';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { LayerComponent } from '../layer/layer.component';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\nimport { FeatureComponent } from '../source/geojson/feature.component';\n\n@Directive({\n  selector: '[mglDraggable]'\n})\nexport class DraggableDirective implements OnInit, OnDestroy {\n  // tslint:disable-next-line:no-input-rename\n  @Input('mglDraggable') layer?: LayerComponent;\n\n  @Output() dragStart = new EventEmitter<MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<MapMouseEvent>();\n  @Output() drag = new EventEmitter<MapMouseEvent>();\n\n  private destroyed$: ReplaySubject<void> = new ReplaySubject(1);\n\n  constructor(\n    private MapService: MapService,\n    private NgZone: NgZone,\n    @Optional() @Host() private FeatureComponent?: FeatureComponent,\n    @Optional() @Host() private MarkerComponent?: MarkerComponent\n  ) { }\n\n  ngOnInit() {\n    let enter$;\n    let leave$;\n    let updateCoords;\n    if (this.MarkerComponent) {\n      let markerElement = (<Element>this.MarkerComponent.content.nativeElement);\n      if (markerElement.children.length === 1) {\n        markerElement = markerElement.children[0];\n      }\n      enter$ = fromEvent(markerElement, 'mouseenter');\n      leave$ = fromEvent(markerElement, 'mouseleave');\n      updateCoords = this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent);\n    } else if (this.FeatureComponent && this.layer) {\n      enter$ = this.layer.mouseEnter;\n      leave$ = this.layer.mouseLeave;\n      updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);\n      if (this.FeatureComponent.geometry.type !== 'Point') {\n        throw new Error('mglDraggable only support point feature');\n      }\n    } else {\n      throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');\n    }\n\n    this.handleDraggable(enter$, leave$, updateCoords);\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(undefined);\n    this.destroyed$.complete();\n  }\n\n  private handleDraggable(enter$: Observable<any>, leave$: Observable<any>, updateCoords: (coord: number[]) => void) {\n    let moving = false;\n    let inside = false;\n    this.MapService.mapCreated$.subscribe(() => {\n      const mouseUp$ = fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mouseup');\n      const dragStart$ = enter$.pipe(\n        takeUntil(this.destroyed$),\n        filter(() => !moving),\n        filter((evt) => this.filterFeature(evt)),\n        tap(() => {\n          inside = true;\n          this.MapService.changeCanvasCursor('move');\n          this.MapService.updateDragPan(false);\n        }),\n        switchMap(() =>\n          fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousedown')\n            .pipe(takeUntil(leave$))\n        )\n      );\n      const dragging$ = dragStart$.pipe(\n        switchMap(() => fromEvent<MapMouseEvent>(this.MapService.mapInstance, 'mousemove')\n          .pipe(takeUntil(mouseUp$))\n        )\n      );\n      const dragEnd$ = dragStart$.pipe(\n        switchMap(() => mouseUp$.pipe(take(1)))\n      );\n      dragStart$.subscribe((evt) => {\n        moving = true;\n        if (this.dragStart.observers.length) {\n          this.NgZone.run(() => this.dragStart.emit(evt));\n        }\n      });\n      dragging$.subscribe((evt) => {\n        updateCoords([evt.lngLat.lng, evt.lngLat.lat]);\n        if (this.drag.observers.length) {\n          this.NgZone.run(() => this.drag.emit(evt));\n        }\n      });\n      dragEnd$.subscribe((evt) => {\n        moving = false;\n        if (this.dragEnd.observers.length) {\n          this.NgZone.run(() => this.dragEnd.emit(evt));\n        }\n        if (!inside) { // It's possible to dragEnd outside the target (small input lag)\n          this.MapService.changeCanvasCursor('');\n          this.MapService.updateDragPan(true);\n        }\n      });\n      leave$.pipe(\n        takeUntil(this.destroyed$),\n        tap(() => inside = false),\n        filter(() => !moving)\n      ).subscribe(() => {\n        this.MapService.changeCanvasCursor('');\n        this.MapService.updateDragPan(true);\n      });\n    });\n  }\n\n  private filterFeature(evt: MapMouseEvent) {\n    if (this.FeatureComponent && this.layer) {\n      const feature: GeoJSON.Feature<any> = this.MapService.queryRenderedFeatures(\n        evt.point,\n        {\n          layers: [this.layer.id],\n          filter: [\n            'all',\n            ['==', '$type', 'Point'],\n            ['==', '$id', this.FeatureComponent.id]\n          ]\n        }\n      )[0];\n      if (!feature) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\n",
    "import {\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { MapService } from '../map/map.service';\nimport { MapImageData, MapImageOptions } from '../map/map.types';\n\n@Component({\n  selector: 'mgl-image',\n  template: ''\n})\nexport class ImageComponent implements OnInit, OnDestroy, OnChanges {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() data?: MapImageData;\n  @Input() options?: MapImageOptions;\n  @Input() url?: string;\n\n  @Output() error = new EventEmitter<{ status: number }>();\n  @Output() loaded = new EventEmitter<void>();\n\n  private imageAdded = false;\n\n  constructor(\n    private MapService: MapService,\n    private zone: NgZone\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(async () => {\n      if (this.data) {\n        this.MapService.addImage(\n          this.id,\n          this.data,\n          this.options\n        );\n        this.imageAdded = true;\n      } else if (this.url) {\n        try {\n          await this.MapService.loadAndAddImage(\n            this.id,\n            this.url,\n            this.options\n          );\n          this.imageAdded = true;\n          this.zone.run(() => {\n            this.loaded.emit();\n          });\n        } catch (error) {\n          this.zone.run(() => {\n            this.error.emit(error);\n          });\n        }\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.data && !changes.data.isFirstChange() ||\n      changes.options && !changes.options.isFirstChange() ||\n      changes.url && !changes.url.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.imageAdded) {\n      this.MapService.removeImage(this.id);\n    }\n  }\n}\n",
    "import {\n  AnimationOptions,\n  EventData,\n  LngLatBoundsLike,\n  LngLatLike,\n  Map,\n  MapBoxZoomEvent,\n  MapMouseEvent,\n  MapTouchEvent,\n  PaddingOptions,\n  PointLike,\n  Style\n  } from 'mapbox-gl';\nimport { MapService, MovingOptions } from './map.service';\nimport { MapEvent } from './map.types';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\n\ndeclare global {\n  namespace mapboxgl {\n    export interface MapboxOptions {\n      failIfMajorPerformanceCaveat?: boolean;\n      transformRequest?: Function;\n      localIdeographFontFamily?: string;\n      pitchWithRotate?: boolean;\n    }\n  }\n}\n\n@Component({\n  selector: 'mgl-map',\n  template: '<div #container></div>',\n  styles: [`\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  `],\n  providers: [\n    MapService\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapComponent implements OnChanges, OnDestroy, AfterViewInit, MapEvent {\n  /* Init inputs */\n  @Input() accessToken?: string;\n  @Input() customMapboxApiUrl?: string;\n  @Input() hash?: boolean;\n  @Input() refreshExpiredTiles?: boolean;\n  @Input() failIfMajorPerformanceCaveat?: boolean;\n  @Input() classes?: string[];\n  @Input() bearingSnap?: number;\n  @Input() interactive?: boolean;\n  @Input() pitchWithRotate?: boolean;\n  @Input() attributionControl?: boolean;\n  @Input() logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n  @Input() maxTileCacheSize?: number;\n  @Input() localIdeographFontFamily?: string;\n  @Input() preserveDrawingBuffer?: boolean;\n  @Input() renderWorldCopies?: boolean;\n  @Input() trackResize?: boolean;\n  @Input() transformRequest?: Function;\n\n  /* Dynamic inputs */\n  @Input() minZoom?: number;\n  @Input() maxZoom?: number;\n  @Input() scrollZoom?: boolean;\n  @Input() dragRotate?: boolean;\n  @Input() touchZoomRotate?: boolean;\n  @Input() doubleClickZoom?: boolean;\n  @Input() keyboard?: boolean;\n  @Input() dragPan?: boolean;\n  @Input() boxZoom?: boolean;\n  @Input() style: Style | string;\n  @Input() center?: LngLatLike;\n  @Input() maxBounds?: LngLatBoundsLike;\n  @Input() zoom?: [number];\n  @Input() bearing?: [number];\n  @Input() pitch?: [number];\n\n  /* Added by ngx-mapbox-gl */\n  @Input() movingMethod: 'jumpTo' | 'easeTo' | 'flyTo' = 'flyTo';\n  @Input() movingOptions?: MovingOptions;\n  @Input() fitBounds?: LngLatBoundsLike;\n  @Input() fitBoundsOptions?: {\n    linear?: boolean,\n    easing?: Function,\n    padding?: number | PaddingOptions,\n    offset?: PointLike,\n    maxZoom?: number\n  };\n  @Input() centerWithPanTo?: boolean;\n  @Input() panToOptions?: AnimationOptions;\n  @Input() cursorStyle?: string;\n\n  @Output() resize = new EventEmitter<void>();\n  @Output() remove = new EventEmitter<void>();\n  @Output() mouseDown = new EventEmitter<MapMouseEvent>();\n  @Output() mouseUp = new EventEmitter<MapMouseEvent>();\n  @Output() mouseMove = new EventEmitter<MapMouseEvent>();\n  @Output() click = new EventEmitter<MapMouseEvent>();\n  @Output() dblClick = new EventEmitter<MapMouseEvent>();\n  @Output() mouseEnter = new EventEmitter<MapMouseEvent>();\n  @Output() mouseLeave = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOver = new EventEmitter<MapMouseEvent>();\n  @Output() mouseOut = new EventEmitter<MapMouseEvent>();\n  @Output() contextMenu = new EventEmitter<MapMouseEvent>();\n  @Output() touchStart = new EventEmitter<MapTouchEvent>();\n  @Output() touchEnd = new EventEmitter<MapTouchEvent>();\n  @Output() touchMove = new EventEmitter<MapTouchEvent>();\n  @Output() touchCancel = new EventEmitter<MapTouchEvent>();\n  @Output() moveStart = new EventEmitter<DragEvent>(); // TODO Check type\n  @Output() move = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() moveEnd = new EventEmitter<DragEvent>();\n  @Output() dragStart = new EventEmitter<DragEvent>();\n  @Output() drag = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() dragEnd = new EventEmitter<DragEvent>();\n  @Output() zoomStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEvt = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() zoomEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateStart = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotate = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() rotateEnd = new EventEmitter<MapTouchEvent | MapMouseEvent>();\n  @Output() pitchStart = new EventEmitter<EventData>();\n  @Output() pitchEvt = new EventEmitter<EventData>();\n  @Output() pitchEnd = new EventEmitter<EventData>();\n  @Output() boxZoomStart = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomEnd = new EventEmitter<MapBoxZoomEvent>();\n  @Output() boxZoomCancel = new EventEmitter<MapBoxZoomEvent>();\n  @Output() webGlContextLost = new EventEmitter<void>();\n  @Output() webGlContextRestored = new EventEmitter<void>();\n  @Output() load = new EventEmitter<any>();\n  @Output() render = new EventEmitter<void>();\n  @Output() error = new EventEmitter<any>(); // TODO Check type\n  @Output() data = new EventEmitter<EventData>();\n  @Output() styleData = new EventEmitter<EventData>();\n  @Output() sourceData = new EventEmitter<EventData>();\n  @Output() dataLoading = new EventEmitter<EventData>();\n  @Output() styleDataLoading = new EventEmitter<EventData>();\n  @Output() sourceDataLoading = new EventEmitter<EventData>();\n\n  get mapInstance(): Map {\n    return this.MapService.mapInstance;\n  }\n\n  @ViewChild('container') mapContainer: ElementRef;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngAfterViewInit() {\n    this.MapService.setup({\n      accessToken: this.accessToken,\n      customMapboxApiUrl: this.customMapboxApiUrl,\n      mapOptions: {\n        container: this.mapContainer.nativeElement,\n        minZoom: this.minZoom,\n        maxZoom: this.maxZoom,\n        style: this.style,\n        hash: this.hash,\n        interactive: this.interactive,\n        bearingSnap: this.bearingSnap,\n        pitchWithRotate: this.pitchWithRotate,\n        classes: this.classes,\n        attributionControl: this.attributionControl,\n        logoPosition: this.logoPosition,\n        failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,\n        preserveDrawingBuffer: this.preserveDrawingBuffer,\n        refreshExpiredTiles: this.refreshExpiredTiles,\n        maxBounds: this.maxBounds,\n        scrollZoom: this.scrollZoom,\n        boxZoom: this.boxZoom,\n        dragRotate: this.dragRotate,\n        dragPan: this.dragPan,\n        keyboard: this.keyboard,\n        doubleClickZoom: this.doubleClickZoom,\n        touchZoomRotate: this.touchZoomRotate,\n        trackResize: this.trackResize,\n        center: this.center,\n        zoom: this.zoom,\n        bearing: this.bearing,\n        pitch: this.pitch,\n        renderWorldCopies: this.renderWorldCopies,\n        maxTileCacheSize: this.maxTileCacheSize,\n        localIdeographFontFamily: this.localIdeographFontFamily,\n        transformRequest: this.transformRequest\n      },\n      mapEvents: this\n    });\n    if (this.cursorStyle) {\n      this.MapService.changeCanvasCursor(this.cursorStyle);\n    }\n  }\n\n  ngOnDestroy() {\n    this.MapService.destroyMap();\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    await this.MapService.mapCreated$.toPromise();\n    if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {\n      this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);\n    }\n    if (changes.minZoom && !changes.minZoom.isFirstChange()) {\n      this.MapService.updateMinZoom(changes.minZoom.currentValue);\n    }\n    if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {\n      this.MapService.updateMaxZoom(changes.maxZoom.currentValue);\n    }\n    if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {\n      this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);\n    }\n    if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {\n      this.MapService.updateDragRotate(changes.dragRotate.currentValue);\n    }\n    if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {\n      this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);\n    }\n    if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {\n      this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);\n    }\n    if (changes.keyboard && !changes.keyboard.isFirstChange()) {\n      this.MapService.updateKeyboard(changes.keyboard.currentValue);\n    }\n    if (changes.dragPan && !changes.dragPan.isFirstChange()) {\n      this.MapService.updateDragPan(changes.dragPan.currentValue);\n    }\n    if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {\n      this.MapService.updateBoxZoom(changes.boxZoom.currentValue);\n    }\n    if (changes.style && !changes.style.isFirstChange()) {\n      this.MapService.updateStyle(changes.style.currentValue);\n    }\n    if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {\n      this.MapService.updateMaxBounds(changes.maxBounds.currentValue);\n    }\n    if (changes.fitBounds && !changes.fitBounds.isFirstChange()) {\n      this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);\n    }\n    if (\n      this.centerWithPanTo &&\n      changes.center && !changes.center.isFirstChange() &&\n      !changes.zoom && !changes.bearing && !changes.pitch\n    ) {\n      this.MapService.panTo(this.center!, this.panToOptions);\n    } else if (\n      changes.center && !changes.center.isFirstChange() ||\n      changes.zoom && !changes.zoom.isFirstChange() ||\n      changes.bearing && !changes.bearing.isFirstChange() ||\n      changes.pitch && !changes.pitch.isFirstChange()\n    ) {\n      this.MapService.move(\n        this.movingMethod,\n        this.movingOptions,\n        changes.zoom && this.zoom ? this.zoom[0] : undefined,\n        changes.center ? this.center : undefined,\n        changes.bearing && this.bearing ? this.bearing[0] : undefined,\n        changes.pitch && this.pitch ? this.pitch[0] : undefined\n      );\n    }\n  }\n}\n",
    "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { Subscription } from 'rxjs/Subscription';\nimport supercluster, { Cluster, Options as SuperclusterOptions, Supercluster } from 'supercluster';\nimport { MapService } from '../map/map.service';\n\n@Directive({ selector: 'ng-template[mglPoint]' })\nexport class PointDirective { }\n\n@Directive({ selector: 'ng-template[mglClusterPoint]' })\nexport class ClusterPointDirective { }\n\n@Component({\n  selector: 'mgl-marker-cluster',\n  template: `\n    <ng-container *ngFor=\"let feature of clusterPoints\">\n      <ng-container *ngIf=\"feature.properties.cluster; else point\">\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }\"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]=\"feature\"\n        >\n          <ng-container *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false\n})\nexport class MarkerClusterComponent implements OnChanges, OnDestroy, AfterContentInit, OnInit {\n  /* Init input */\n  @Input() radius?: number;\n  @Input() maxZoom?: number;\n  @Input() minZoom?: number;\n  @Input() extent?: number;\n  @Input() nodeSize?: number;\n  @Input() log?: boolean;\n  @Input() reduce?: (accumulated: any, props: any) => void;\n  @Input() initial?: () => any;\n  @Input() map?: (props: any) => any;\n\n  /* Dynamic input */\n  @Input() data: GeoJSON.FeatureCollection<GeoJSON.Point>;\n\n  @ContentChild(PointDirective, { read: TemplateRef }) pointTpl: TemplateRef<any>;\n  @ContentChild(ClusterPointDirective, { read: TemplateRef }) clusterPointTpl: TemplateRef<any>;\n\n  clusterPoints: GeoJSON.Feature<GeoJSON.Point>[];\n\n  private supercluster: Supercluster;\n  private sub = new Subscription();\n\n  constructor(\n    private MapService: MapService,\n    private ChangeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    const options: SuperclusterOptions = {\n      radius: this.radius,\n      maxZoom: this.maxZoom,\n      minZoom: this.minZoom,\n      extent: this.extent,\n      nodeSize: this.nodeSize,\n      log: this.log,\n      reduce: this.reduce,\n      initial: this.initial,\n      map: this.map\n    };\n    Object.keys(options)\n      .forEach((key: string) => {\n        const tkey = <keyof SuperclusterOptions>key;\n        if (options[tkey] === undefined) {\n          delete options[tkey];\n        }\n      });\n    this.supercluster = supercluster(options);\n    this.supercluster.load(this.data.features);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.data && !changes.data.isFirstChange()) {\n      this.supercluster.load(this.data.features);\n    }\n  }\n\n  ngAfterContentInit() {\n    this.MapService.mapCreated$.subscribe(() => {\n      const mapMove$ = merge(\n        fromEvent(this.MapService.mapInstance, 'zoomChange'),\n        fromEvent(this.MapService.mapInstance, 'move')\n      );\n      const sub = mapMove$.pipe(\n        startWith<any>(undefined)\n      ).subscribe(() => this.updateCluster());\n      this.sub.add(sub);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLeavesFn = (feature: Cluster) => {\n    return (limit?: number, offset?: number) => (<any>this.supercluster.getLeaves)(feature.properties.cluster_id!, limit, offset);\n  }\n\n  getChildrenFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getChildren)(feature.properties.cluster_id!);\n  }\n\n  getClusterExpansionZoomFn = (feature: Cluster) => {\n    return () => (<any>this.supercluster.getClusterExpansionZoom)(feature.properties.cluster_id!);\n  }\n\n  private updateCluster() {\n    const bbox = this.MapService.getCurrentViewportBbox();\n    const currentZoom = Math.round(this.MapService.mapInstance.getZoom());\n    this.clusterPoints = this.supercluster.getClusters(bbox, currentZoom);\n    this.ChangeDetectorRef.detectChanges();\n    this.MapService.applyChanges();\n  }\n}\n",
    "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { PointLike, Popup, LngLatLike } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\nimport { MarkerComponent } from '../marker/marker.component';\n\n@Component({\n  selector: 'mgl-popup',\n  template: '<div #content><ng-content></ng-content></div>',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupComponent implements OnChanges, OnDestroy, AfterViewInit, OnInit {\n  /* Init input */\n  @Input() closeButton?: boolean;\n  @Input() closeOnClick?: boolean;\n  @Input() anchor?: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left';\n  @Input() offset?: number | PointLike | { [anchor: string]: [number, number] };\n\n  /* Dynamic input */\n  @Input() lngLat?: LngLatLike;\n  @Input() marker?: MarkerComponent;\n\n  @Output() close = new EventEmitter<void>();\n\n  @ViewChild('content') content: ElementRef;\n\n  popupInstance?: Popup;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    if (this.lngLat && this.marker) {\n      throw new Error('marker and lngLat input are mutually exclusive');\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.lngLat && !changes.lngLat.isFirstChange()) {\n      this.MapService.removePopup(this.popupInstance!);\n      const popupInstanceTmp = this.createPopup();\n      this.MapService.addPopup(popupInstanceTmp);\n      this.popupInstance = popupInstanceTmp;\n    }\n    if (changes.marker && !changes.marker.isFirstChange()) {\n      const previousMarker: MarkerComponent = changes.marker.previousValue;\n      if (previousMarker.markerInstance) {\n        previousMarker.markerInstance.setPopup(undefined);\n      }\n      if (this.marker && this.marker.markerInstance) {\n        this.marker.markerInstance.setPopup(this.popupInstance);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.popupInstance = this.createPopup();\n  }\n\n  ngOnDestroy() {\n    this.MapService.removePopup(this.popupInstance!);\n    this.popupInstance = undefined;\n  }\n\n  private createPopup() {\n    const options = {\n      closeButton: this.closeButton,\n      closeOnClick: this.closeOnClick,\n      anchor: this.anchor,\n      offset: this.offset\n    };\n    Object.keys(options)\n      .forEach((key) =>\n        (<any>options)[key] === undefined && delete (<any>options)[key]);\n    const popupInstance = new Popup(options);\n    popupInstance.once('close', () => {\n      this.close.emit();\n    });\n    popupInstance.setDOMContent(this.content.nativeElement);\n    this.MapService.mapCreated$.subscribe(() => {\n      if (this.lngLat) {\n        popupInstance.setLngLat(this.lngLat);\n        this.MapService.addPopup(popupInstance);\n      } else if (this.marker && this.marker.markerInstance) {\n        this.marker.markerInstance.setPopup(popupInstance);\n      }\n    });\n    return popupInstance;\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CanvasSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-canvas-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CanvasSourceComponent implements OnInit, OnDestroy, OnChanges, CanvasSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() coordinates: number[][];\n  @Input() canvas: string;\n  @Input() animate?: boolean;\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      const source = {\n        type: 'canvas',\n        coordinates: this.coordinates,\n        canvas: this.canvas,\n        animate: this.animate,\n      };\n      this.MapService.addSource(this.id, source);\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.coordinates && !changes.coordinates.isFirstChange() ||\n      changes.canvas && !changes.canvas.isFirstChange() ||\n      changes.animate && !changes.animate.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { ImageSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-image-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageSourceComponent implements OnInit, OnDestroy, OnChanges, ImageSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'image',\n        url: this.url,\n        coordinates: this.coordinates\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { RasterSource } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-raster-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url: string;\n  @Input() tiles?: string[];\n  @Input() bounds?: number[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n  @Input() tileSize?: number;\n\n  type: 'raster' = 'raster'; // Just to make ts happy\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      const source = {\n        type: this.type,\n        url: this.url,\n        tiles: this.tiles,\n        bounds: this.bounds,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n        tileSize: this.tileSize\n      };\n      this.MapService.addSource(this.id, source);\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.bounds && !changes.bounds.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange() ||\n      changes.tileSize && !changes.tileSize.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VectorSource } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-vector-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VectorSourceComponent implements OnInit, OnDestroy, OnChanges, VectorSource {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() url?: string;\n  @Input() tiles?: string[];\n  @Input() minzoom?: number;\n  @Input() maxzoom?: number;\n\n  type: 'vector' = 'vector'; // Just to make ts happy\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: this.type,\n        url: this.url,\n        tiles: this.tiles,\n        minzoom: this.minzoom,\n        maxzoom: this.maxzoom,\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.url && !changes.url.isFirstChange() ||\n      changes.tiles && !changes.tiles.isFirstChange() ||\n      changes.minzoom && !changes.minzoom.isFirstChange() ||\n      changes.maxzoom && !changes.maxzoom.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n",
    "import { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { VideoSourceOptions } from 'mapbox-gl';\nimport { MapService } from '../map/map.service';\n\n@Component({\n  selector: 'mgl-video-source',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoSourceComponent implements OnInit, OnDestroy, OnChanges, VideoSourceOptions {\n  /* Init inputs */\n  @Input() id: string;\n\n  /* Dynamic inputs */\n  @Input() urls: string[];\n  @Input() coordinates: number[][];\n\n  private sourceAdded = false;\n\n  constructor(\n    private MapService: MapService\n  ) { }\n\n  ngOnInit() {\n    this.MapService.mapLoaded$.subscribe(() => {\n      this.MapService.addSource(this.id, {\n        type: 'video',\n        urls: this.urls,\n        coordinates: this.coordinates\n      });\n      this.sourceAdded = true;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.sourceAdded) {\n      return;\n    }\n    if (\n      changes.urls && !changes.urls.isFirstChange() ||\n      changes.coordinates && !changes.coordinates.isFirstChange()\n    ) {\n      this.ngOnDestroy();\n      this.ngOnInit();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sourceAdded) {\n      this.MapService.removeSource(this.id);\n    }\n  }\n}\n",
    "import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AttributionControlDirective } from './control/attribution-control.directive';\nimport { ControlComponent } from './control/control.component';\nimport { FullscreenControlDirective } from './control/fullscreen-control.directive';\nimport { GeocoderControlDirective, MAPBOX_GEOCODER_API_KEY } from './control/geocoder-control.directive';\nimport { GeolocateControlDirective } from './control/geolocate-control.directive';\nimport { NavigationControlDirective } from './control/navigation-control.directive';\nimport { ScaleControlDirective } from './control/scale-control.directive';\nimport { DraggableDirective } from './draggable/draggable.directive';\nimport { ImageComponent } from './image/image.component';\nimport { LayerComponent } from './layer/layer.component';\nimport { MapComponent } from './map/map.component';\nimport { MAPBOX_API_KEY } from './map/map.service';\nimport { ClusterPointDirective, MarkerClusterComponent, PointDirective } from './marker-cluster/marker-cluster.component';\nimport { MarkerComponent } from './marker/marker.component';\nimport { PopupComponent } from './popup/popup.component';\nimport { CanvasSourceComponent } from './source/canvas-source.component';\nimport { FeatureComponent } from './source/geojson/feature.component';\nimport { GeoJSONSourceComponent } from './source/geojson/geojson-source.component';\nimport { ImageSourceComponent } from './source/image-source.component';\nimport { RasterSourceComponent } from './source/raster-source.component';\nimport { VectorSourceComponent } from './source/vector-source.component';\nimport { VideoSourceComponent } from './source/video-source.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ],\n  exports: [\n    MapComponent,\n    LayerComponent,\n    DraggableDirective,\n    ImageComponent,\n    VectorSourceComponent,\n    GeoJSONSourceComponent,\n    RasterSourceComponent,\n    ImageSourceComponent,\n    VideoSourceComponent,\n    CanvasSourceComponent,\n    FeatureComponent,\n    MarkerComponent,\n    PopupComponent,\n    ControlComponent,\n    FullscreenControlDirective,\n    NavigationControlDirective,\n    GeocoderControlDirective,\n    GeolocateControlDirective,\n    AttributionControlDirective,\n    ScaleControlDirective,\n    PointDirective,\n    ClusterPointDirective,\n    MarkerClusterComponent\n  ]\n})\nexport class NgxMapboxGLModule {\n  static forRoot(config: { accessToken: string, geocoderAccessToken?: string }): ModuleWithProviders {\n    return {\n      ngModule: NgxMapboxGLModule,\n      providers: [\n        {\n          provide: MAPBOX_API_KEY,\n          useValue: config.accessToken\n        },\n        {\n          provide: MAPBOX_GEOCODER_API_KEY,\n          useValue: config.geocoderAccessToken || config.accessToken\n        }\n      ],\n    };\n  }\n}\n"
  ],
  "names": [
    "__awaiter",
    "thisArg",
    "_arguments",
    "P",
    "generator",
    "Promise",
    "resolve",
    "reject",
    "fulfilled",
    "value",
    "step",
    "next",
    "e",
    "rejected",
    "result",
    "done",
    "then",
    "apply",
    "__generator",
    "body",
    "f",
    "y",
    "t",
    "g",
    "_",
    "label",
    "sent",
    "trys",
    "ops",
    "verb",
    "throw",
    "return",
    "Symbol",
    "iterator",
    "this",
    "n",
    "v",
    "op",
    "TypeError",
    "call",
    "pop",
    "length",
    "push",
    "__values",
    "o",
    "m",
    "i",
    "MAPBOX_API_KEY",
    "InjectionToken",
    "MglResizeEventEmitter",
    "MapService",
    "zone",
    "mapCreated",
    "AsyncSubject",
    "mapLoaded",
    "layerIdsToRemove",
    "sourceIdsToRemove",
    "markersToRemove",
    "popupsToRemove",
    "imageIdsToRemove",
    "subscription",
    "Subscription",
    "mapCreated$",
    "asObservable",
    "mapLoaded$",
    "prototype",
    "setup",
    "options",
    "_this",
    "onStable",
    "pipe",
    "first",
    "subscribe",
    "assign",
    "MapboxGl",
    "accessToken",
    "customMapboxApiUrl",
    "createMap",
    "mapOptions",
    "hookEvents",
    "mapEvents",
    "undefined",
    "complete",
    "destroyMap",
    "unsubscribe",
    "mapInstance",
    "remove",
    "updateMinZoom",
    "minZoom",
    "runOutsideAngular",
    "setMinZoom",
    "updateMaxZoom",
    "maxZoom",
    "setMaxZoom",
    "updateScrollZoom",
    "status",
    "scrollZoom",
    "enable",
    "disable",
    "updateDragRotate",
    "dragRotate",
    "updateTouchZoomRotate",
    "touchZoomRotate",
    "updateDoubleClickZoom",
    "doubleClickZoom",
    "updateKeyboard",
    "keyboard",
    "updateDragPan",
    "dragPan",
    "updateBoxZoom",
    "boxZoom",
    "updateStyle",
    "style",
    "setStyle",
    "updateMaxBounds",
    "maxBounds",
    "setMaxBounds",
    "changeCanvasCursor",
    "cursor",
    "getCanvasContainer",
    "queryRenderedFeatures",
    "pointOrBox",
    "parameters",
    "panTo",
    "center",
    "move",
    "movingMethod",
    "movingOptions",
    "zoom",
    "bearing",
    "pitch",
    "Object",
    "getZoom",
    "getCenter",
    "getBearing",
    "getPitch",
    "addLayer",
    "layer",
    "before",
    "keys",
    "layerOptions",
    "forEach",
    "key",
    "tkey",
    "layerEvents",
    "click",
    "observers",
    "on",
    "id",
    "evt",
    "run",
    "emit",
    "mouseEnter",
    "mouseLeave",
    "mouseMove",
    "removeLayer",
    "layerId",
    "addMarker",
    "marker",
    "addTo",
    "removeMarker",
    "addPopup",
    "popup",
    "removePopup",
    "addControl",
    "control",
    "position",
    "removeControl",
    "loadAndAddImage",
    "imageId",
    "url",
    "loadImage",
    "error",
    "image",
    "addImage",
    "data",
    "removeImage",
    "addSource",
    "sourceId",
    "source",
    "getSource",
    "removeSource",
    "setAllLayerPaintProperty",
    "paint",
    "setPaintProperty",
    "setAllLayerLayoutProperty",
    "layout",
    "setLayoutProperty",
    "setLayerFilter",
    "filter",
    "setFilter",
    "setLayerBefore",
    "beforeId",
    "moveLayer",
    "setLayerZoomRange",
    "fitBounds",
    "bounds",
    "getCurrentViewportBbox",
    "canvas",
    "getCanvas",
    "w",
    "width",
    "h",
    "height",
    "upLeft",
    "unproject",
    "toArray",
    "upRight",
    "downRight",
    "downLeft",
    "bbox",
    "polygon",
    "applyChanges",
    "removeLayers",
    "removeSources",
    "removeMarkers",
    "removePopups",
    "removeImages",
    "NgZone",
    "assertNotInAngularZone",
    "MapboxGl.Map",
    "subChanges",
    "onMicrotaskEmpty",
    "subResize",
    "resizeEvent",
    "resize",
    "add",
    "_a",
    "tslib_1.__values",
    "_b",
    "off",
    "events",
    "load",
    "mouseDown",
    "mouseUp",
    "dblClick",
    "mouseOver",
    "mouseOut",
    "contextMenu",
    "touchStart",
    "touchEnd",
    "touchMove",
    "touchCancel",
    "moveStart",
    "moveEnd",
    "dragStart",
    "drag",
    "dragEnd",
    "zoomStart",
    "zoomEvt",
    "zoomEnd",
    "rotateStart",
    "rotate",
    "rotateEnd",
    "pitchStart",
    "pitchEvt",
    "pitchEnd",
    "boxZoomStart",
    "boxZoomEnd",
    "boxZoomCancel",
    "webGlContextLost",
    "webGlContextRestored",
    "render",
    "styleData",
    "sourceData",
    "dataLoading",
    "styleDataLoading",
    "sourceDataLoading",
    "obj",
    "prop",
    "split",
    "shift",
    "toString",
    "type",
    "Injectable",
    "decorators",
    "Optional",
    "Inject",
    "args",
    "CustomControl",
    "container",
    "onAdd",
    "onRemove",
    "removeChild",
    "getDefaultPosition",
    "ControlComponent",
    "ngAfterContentInit",
    "content",
    "nativeElement",
    "childNodes",
    "ngOnDestroy",
    "Component",
    "selector",
    "template",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "Input",
    "ViewChild",
    "AttributionControlDirective",
    "ngOnInit",
    "Error",
    "compact",
    "AttributionControl",
    "Directive",
    "Host",
    "FullscreenControlDirective",
    "FullscreenControl",
    "MapboxGeocoder",
    "require",
    "MAPBOX_GEOCODER_API_KEY",
    "GeocoderControlDirective",
    "clear",
    "EventEmitter",
    "loading",
    "results",
    "proximity",
    "country",
    "placeholder",
    "types",
    "flyTo",
    "minLength",
    "limit",
    "language",
    "localGeocoder",
    "geocoder",
    "ngOnChanges",
    "changes",
    "isFirstChange",
    "setProximity",
    "currentValue",
    "Output",
    "GeolocateControlDirective",
    "positionOptions",
    "fitBoundsOptions",
    "trackUserLocation",
    "showUserLocation",
    "GeolocateControl",
    "NavigationControlDirective",
    "NavigationControl",
    "ScaleControlDirective",
    "maxWidth",
    "unit",
    "ScaleControl",
    "LayerComponent",
    "layerAdded",
    "metadata",
    "source-layer",
    "sourceLayer",
    "minzoom",
    "maxzoom",
    "MarkerComponent",
    "feature",
    "lngLat",
    "setLngLat",
    "coordinates",
    "ngAfterViewInit",
    "markerInstance",
    "Marker",
    "offset",
    "togglePopup",
    "updateCoordinates",
    "styles",
    "encapsulation",
    "ViewEncapsulation",
    "None",
    "GeoJSONSourceComponent",
    "updateFeatureData",
    "Subject",
    "sourceAdded",
    "featureIdCounter",
    "features",
    "buffer",
    "tolerance",
    "cluster",
    "clusterRadius",
    "clusterMaxZoom",
    "sub",
    "debounceTime",
    "setData",
    "addFeature",
    "removeFeature",
    "collection",
    "index",
    "indexOf",
    "splice",
    "getNewFeatureId",
    "FeatureComponent",
    "geometry",
    "properties",
    "forwardRef",
    "DraggableDirective",
    "destroyed$",
    "ReplaySubject",
    "enter$",
    "leave$",
    "updateCoords",
    "markerElement",
    "children",
    "fromEvent",
    "bind",
    "handleDraggable",
    "moving",
    "inside",
    "mouseUp$",
    "dragStart$",
    "takeUntil",
    "filterFeature",
    "tap",
    "switchMap",
    "dragging$",
    "dragEnd$",
    "take",
    "lng",
    "lat",
    "point",
    "layers",
    "ImageComponent",
    "loaded",
    "imageAdded",
    "tslib_1.__awaiter",
    "error_1",
    "MapComponent",
    "defineProperty",
    "get",
    "mapContainer",
    "hash",
    "interactive",
    "bearingSnap",
    "pitchWithRotate",
    "classes",
    "attributionControl",
    "logoPosition",
    "failIfMajorPerformanceCaveat",
    "preserveDrawingBuffer",
    "refreshExpiredTiles",
    "trackResize",
    "renderWorldCopies",
    "maxTileCacheSize",
    "localIdeographFontFamily",
    "transformRequest",
    "cursorStyle",
    "toPromise",
    "centerWithPanTo",
    "panToOptions",
    "providers",
    "PointDirective",
    "ClusterPointDirective",
    "MarkerClusterComponent",
    "ChangeDetectorRef",
    "getLeavesFn",
    "supercluster",
    "getChildrenFn",
    "getClusterExpansionZoomFn",
    "radius",
    "extent",
    "nodeSize",
    "log",
    "reduce",
    "initial",
    "map",
    "merge",
    "startWith",
    "updateCluster",
    "currentZoom",
    "Math",
    "round",
    "clusterPoints",
    "getClusters",
    "detectChanges",
    "preserveWhitespaces",
    "pointTpl",
    "ContentChild",
    "read",
    "TemplateRef",
    "clusterPointTpl",
    "PopupComponent",
    "close",
    "popupInstanceTmp",
    "createPopup",
    "popupInstance",
    "previousMarker",
    "previousValue",
    "setPopup",
    "closeButton",
    "closeOnClick",
    "anchor",
    "Popup",
    "once",
    "setDOMContent",
    "CanvasSourceComponent",
    "animate",
    "ImageSourceComponent",
    "RasterSourceComponent",
    "tiles",
    "tileSize",
    "VectorSourceComponent",
    "VideoSourceComponent",
    "urls",
    "NgxMapboxGLModule",
    "forRoot",
    "config",
    "ngModule",
    "provide",
    "useValue",
    "geocoderAccessToken",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
