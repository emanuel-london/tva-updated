import { Directive, ElementRef, HostListener, NgModule } from '@angular/core';
import { destroy, refresh, replace, setOptions } from 'jcf';
import * as jcf from 'jcf';
import { CommonModule } from '@angular/common';

class JcfDirective {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        setOptions('Select', {
            wrapNative: false,
            wrapNativeOnMobile: false
        });
        replace(this.element.nativeElement);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onChange(event) {
        refresh(this.element.nativeElement);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        destroy(this.element.nativeElement);
    }
}
JcfDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: '[jcf]'
            },] },
];
/**
 * @nocollapse
 */
JcfDirective.ctorParameters = () => [
    { type: ElementRef, },
];
JcfDirective.propDecorators = {
    'onChange': [{ type: HostListener, args: ['change', ['$event'],] },],
};

class JcfModule {
}
JcfModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                exports: [
                    JcfDirective
                ],
                declarations: [
                    JcfDirective
                ],
                providers: [],
            },] },
];
/**
 * @nocollapse
 */
JcfModule.ctorParameters = () => [];

/**
 * Generated bundle index. Do not edit.
 */

export { JcfDirective, JcfModule };
//# sourceMappingURL=angular2-jcf-directive.js.map
