import { Directive, ElementRef, HostListener, NgModule } from '@angular/core';
import { destroy, refresh, replace, setOptions } from 'jcf';
import * as jcf from 'jcf';
import { CommonModule } from '@angular/common';

var JcfDirective = (function () {
    /**
     * @param {?} element
     */
    function JcfDirective(element) {
        this.element = element;
    }
    /**
     * @return {?}
     */
    JcfDirective.prototype.ngOnInit = function () {
        setOptions('Select', {
            wrapNative: false,
            wrapNativeOnMobile: false
        });
        replace(this.element.nativeElement);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    JcfDirective.prototype.onChange = function (event) {
        refresh(this.element.nativeElement);
    };
    /**
     * @return {?}
     */
    JcfDirective.prototype.ngOnDestroy = function () {
        destroy(this.element.nativeElement);
    };
    return JcfDirective;
}());
JcfDirective.decorators = [
    { type: Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: '[jcf]'
            },] },
];
/**
 * @nocollapse
 */
JcfDirective.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
JcfDirective.propDecorators = {
    'onChange': [{ type: HostListener, args: ['change', ['$event'],] },],
};

var JcfModule = (function () {
    function JcfModule() {
    }
    return JcfModule;
}());
JcfModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                exports: [
                    JcfDirective
                ],
                declarations: [
                    JcfDirective
                ],
                providers: [],
            },] },
];
/**
 * @nocollapse
 */
JcfModule.ctorParameters = function () { return []; };

/**
 * Generated bundle index. Do not edit.
 */

export { JcfDirective, JcfModule };
//# sourceMappingURL=angular2-jcf-directive.es5.js.map
