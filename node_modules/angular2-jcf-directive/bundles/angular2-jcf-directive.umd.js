(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('jcf'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'jcf', '@angular/common'], factory) :
	(factory((global.angular2JcfDirective = global.angular2JcfDirective || {}),global.ng.core,global.jcf,global.ng.common));
}(this, (function (exports,_angular_core,jcf,_angular_common) { 'use strict';

var JcfDirective = (function () {
    /**
     * @param {?} element
     */
    function JcfDirective(element) {
        this.element = element;
    }
    /**
     * @return {?}
     */
    JcfDirective.prototype.ngOnInit = function () {
        jcf.setOptions('Select', {
            wrapNative: false,
            wrapNativeOnMobile: false
        });
        jcf.replace(this.element.nativeElement);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    JcfDirective.prototype.onChange = function (event) {
        jcf.refresh(this.element.nativeElement);
    };
    /**
     * @return {?}
     */
    JcfDirective.prototype.ngOnDestroy = function () {
        jcf.destroy(this.element.nativeElement);
    };
    return JcfDirective;
}());
JcfDirective.decorators = [
    { type: _angular_core.Directive, args: [{
                // tslint:disable-next-line:directive-selector
                selector: '[jcf]'
            },] },
];
/**
 * @nocollapse
 */
JcfDirective.ctorParameters = function () { return [
    { type: _angular_core.ElementRef, },
]; };
JcfDirective.propDecorators = {
    'onChange': [{ type: _angular_core.HostListener, args: ['change', ['$event'],] },],
};

var JcfModule = (function () {
    function JcfModule() {
    }
    return JcfModule;
}());
JcfModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                imports: [
                    _angular_common.CommonModule
                ],
                exports: [
                    JcfDirective
                ],
                declarations: [
                    JcfDirective
                ],
                providers: [],
            },] },
];
/**
 * @nocollapse
 */
JcfModule.ctorParameters = function () { return []; };

/**
 * Generated bundle index. Do not edit.
 */

exports.JcfDirective = JcfDirective;
exports.JcfModule = JcfModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular2-jcf-directive.umd.js.map
