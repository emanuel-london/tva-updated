{"version":3,"file":"angular2-jcf-directive.umd.min.js","sources":["../../out-tsc/lib/src/directive/jcf.directive.ts","../../out-tsc/lib/src/module.ts"],"sourcesContent":["import { Directive, ElementRef, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport * as jcf from 'jcf';\nexport class JcfDirective implements OnInit, OnDestroy{\n/**\n * @param {?} element\n */\nconstructor(\nprivate element: ElementRef ){}\n/**\n * @return {?}\n */\nngOnInit() {\n    jcf.setOptions('Select', {\n       wrapNative: false,\n       wrapNativeOnMobile: false\n    });\n\n    jcf.replace(this.element.nativeElement);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonChange(event: Event) {\n     jcf.refresh(this.element.nativeElement);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    jcf.destroy(this.element.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  // tslint:disable-next-line:directive-selector\n  selector: '[jcf]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onChange': [{ type: HostListener, args: ['change', ['$event'], ] },],\n};\n}\n\nfunction JcfDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nJcfDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJcfDirective.ctorParameters;\n/** @type {?} */\nJcfDirective.propDecorators;\n/** @type {?} */\nJcfDirective.prototype.element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JcfDirective } from './directive/jcf.directive';\nexport class JcfModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        JcfDirective\n    ],\n    declarations: [\n        JcfDirective\n    ],\n    providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JcfModule_tsickle_Closure_declarations() {\n/** @type {?} */\nJcfModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJcfModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["element","this","JcfDirective","jcf.setOptions","wrapNative","wrapNativeOnMobile","jcf.replace","nativeElement","event","jcf.refresh","jcf.destroy","type","Directive","args","selector","ElementRef","onChange","HostListener","NgModule","imports","CommonModule","exports","declarations","providers","JcfModule"],"mappings":"4WAEA,iBAIA,WAAuBA,GAAAC,aAAAD,EAyCvB,OApCAE,qBAAA,WACIC,aAHe,UAIZC,YAHY,EAIZC,oBAHoB,IAMvBC,UAHYL,KAAKD,QAAQO,gBAS7BL,qBAAA,SALGM,GAMEC,UALYR,KAAKD,QAAQO,gBAU9BL,wBAAA,WACIQ,UAPYT,KAAKD,QAAQO,oCAG3BI,KAAMC,YAAWC,OASjBC,SAPU,YAIXZ,iBAAA,WAAA,QAUAS,KAAMI,gBAPAb,kBAUPc,WATeL,KAAMM,eAAcJ,MAAM,UAAW,cChCpD,MAAA,4BAGEF,KAAMO,WAAUL,OADdM,SACIC,gBAEJC,SACInB,GAEJoB,cACIpB,GAEJqB,iBAMHC,iBAAA,WAAA"}